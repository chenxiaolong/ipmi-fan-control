%global _version @VERSION@
%global _suffix @SUFFIX@%{nil}
%global _tarball_name @TARBALL_NAME@

Name:           ipmi-fan-control
Version:        %{_version}
Release:        1%{?_suffix}%{?dist}
Summary:        SuperMicro IPMI fan control daemon

# Upstream license specification: GPL-3.0-or-later
License:        GPLv3+
URL:            https://github.com/chenxiaolong/%{name}
Source:         %{_tarball_name}

%if 0%{?fedora}
# OBS fails to evaluate this to determine if the package should even be built
%{!?rust_arches: %define rust_arches x86_64}
ExclusiveArch:  %{rust_arches}

# We're explicitly not using the macros from here because we want to download
# dependencies from the internet
BuildRequires:  rust-packaging
%else
BuildRequires:  cargo
%endif

%if 0%{?rhel} < 8
BuildRequires:  systemd
%else
BuildRequires:  systemd-rpm-macros
%{systemd_requires}
%endif

Requires:       ipmitool
%if 0%{?rhel} < 8
Requires:       smartmontools >= 7.0
%else
Recommends:     smartmontools >= 7.0
%endif

%description
ipmi-fan-control is a program written in Rust to control the fans on SuperMicro
motherboards based on the readings of temperature sensors.

%prep
%autosetup -p1 -n %{name}-%{_version}%{?_suffix}

%build
%if 0%{?fedora}
export RUSTFLAGS="%{__global_rustflags}"
%endif
cargo build --release

%install
install -D -m 0755 target/release/%{name} \
    %{buildroot}%{_bindir}/%{name}

# systemd service
install -d -m 0755 %{buildroot}%{_unitdir}
sed \
    -e 's|@BINDIR@|%{_bindir}|g' \
    -e 's|@SYSCONFDIR@|%{_sysconfdir}|g' \
    < dist/ipmi-fan-control.service.in \
    > %{buildroot}%{_unitdir}/%{name}.service

install -D -m 0644 config.sample.toml \
    %{buildroot}%{_sysconfdir}/%{name}.toml

%post
%systemd_post %{name}.service

%preun
%systemd_preun %{name}.service

%postun
%systemd_postun_with_restart %{name}.service

%files
%doc README.md
%license LICENSE
%config(noreplace) %{_sysconfdir}/%{name}.toml
%{_bindir}/%{name}
%{_unitdir}/%{name}.service

%changelog
